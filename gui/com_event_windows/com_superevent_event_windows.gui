##########################################
# COMMUNITY GUI SUPEREVENT EVENT WINDOWS #
##########################################

# All superevent windows are capped at 1280x800, the resolution of the Steam Deck
# It currently doesn't seem possible to make an event window automatically stretch to the whole screen; this seems to be from the behavior of default_popup_two_lines
# event_window_superevent_newspaper & event_window_superevent_newspaper_full are modified from the Newpapers mod by Bananaman & Klein648

########################################

# Copied over from default window
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

########################################

types com_superevent_window_types {
	
	### SUPEREVENT NEWSPAPER WINDOW (VANILLA WINDOW BACKGROUND)
	# This window limits the background video/texture to its vanilla size
	
	type event_window_superevent_newspaper = event_window {
		name = "event_window_superevent_newspaper"
	
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
		
		blockoverride "event_title_text_options" {
			flowcontainer = {
				minimumsize = { -1 200 }
				direction = horizontal
				spacing = 20
				parentanchor = hcenter|bottom
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					spacing = 5
					margin = {20 30}
				
					textbox = {
						name = "description"
						multiline = yes
						autoresize = yes
						minimumsize = { 480 -1 }
						maximumsize = { 480 -1 }
						parentanchor = top|hcenter
						align = hcenter|nobaseline
						raw_text = "[EventWindow.GetDescription]"
						margin = { 30 10 }
					}
					
					divider_decorative = {}

					textbox = {
						name = "flavortext"
						multiline = yes
						autoresize = yes
						minimumsize = { 600 -1 }
						maximumsize = { 600 -1 }
						parentanchor = top|hcenter
						align = top|hcenter
						raw_text = "#lore [EventWindow.GetFlavor]#!"
						margin = { 30 10 }
					}
				}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					datamodel = "[EventWindow.GetOptions]"
					spacing = 5
					margin = {20 30}

					item = {
						container = {
							widget = {
								visible = "yes"
								
								button = {
									size = { 100% 100% }
									parentanchor = hcenter|bottom
									using = default_button_action
									onclick = "[EventOption.Select]"
									tooltip = "EVENT_OPTION_TOOLTIP"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
									texture = "gfx/interface/backgrounds/tutorial_bg.dds"
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 400 42 }
									maximumsize = { 400 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}
							}
						}
					}
				}
			}
		}
	}
	
	### SUPEREVENT NEWSPAPER WINDOW (FULL WINDOW BACKGROUND)
	# This window stretches the background video/texture to fill the entire window
	
	type event_window_superevent_newspaper_full = event_window {
		name = "event_window_superevent_newspaper_full"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame_fullscreen_horizontal.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
		
		blockoverride "event_dlc_icon" {
		}
		
		blockoverride "event_title_text_options" {
			flowcontainer = {
				minimumsize = { -1 200 }
				direction = horizontal
				spacing = 20
				parentanchor = hcenter|bottom
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					spacing = 5
					margin = {20 30}
				
					textbox = {
						name = "description"
						multiline = yes
						autoresize = yes
						minimumsize = { 480 -1 }
						maximumsize = { 480 -1 }
						parentanchor = top|hcenter
						align = hcenter|nobaseline
						raw_text = "[EventWindow.GetDescription]"
						margin = { 10 0 }
					}
					
					divider_decorative = {}

					textbox = {
						name = "flavortext"
						multiline = yes
						autoresize = yes
						minimumsize = { 600 -1 }
						maximumsize = { 600 -1 }
						parentanchor = top|hcenter
						align = top|hcenter
						raw_text = "#lore [EventWindow.GetFlavor]#!"
						margin = { 30 10 }
					}
				}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					datamodel = "[EventWindow.GetOptions]"
					spacing = 5
					margin = {20 30}

					item = {
						container = {
							widget = {
								visible = "yes"
								
								button = {
									size = { 100% 100% }
									parentanchor = hcenter|bottom
									using = default_button_action
									onclick = "[EventOption.Select]"
									tooltip = "EVENT_OPTION_TOOLTIP"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
									texture = "gfx/interface/backgrounds/tutorial_bg.dds"
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 400 42 }
									maximumsize = { 400 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}
							}
						}
					}
				}
			}
		}
		
		flowcontainer = {
			visible = "[Event.IsDLCContent]"
			tooltip = "EVENT_DLC_TOOLTIP"
			spacing = 10
			parentanchor = bottom|left
			position = { 30 -20 }

			icon = {
				size = { 40 40 }
				texture = "gfx/interface/backgrounds/round_frame_dec.dds"
				parentanchor = bottom|left

				icon = {
					size = { 40 40 }
					position = { 2 -2 }

					texture = "[Event.GetDLCIcon]"
					parentanchor = center

				}
			}

			textbox = {
				size = { 150 20 }
				align = left|vcenter
				parentanchor = left|vcenter
				elide = right
				using = fontsize_large
				fontsize_min = 12
				alpha = 0.7

				text = "[Event.GetDLCName]"
			}
		}
		
	}

	### SUPEREVENT CLASSIC WINDOW (VANILLA WINDOW BACKGROUND)
	# This window limits the background video/texture to its vanilla size
	
	type event_window_superevent_classic = event_window {
		name = "event_window_superevent_classic"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
		
	}
	
	### SUPEREVENT CLASSIC WINDOW (FULL WINDOW BACKGROUND)
	# This window stretches the background video/texture to fill the entire window
	
	type event_window_superevent_classic_full = event_window {
		name = "event_window_superevent_classic_full"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame_fullscreen_horizontal.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
	}
	
	### SUPEREVENT MODERN WINDOW (VANILLA WINDOW BACKGROUND)
	# This window limits the background video/texture to its vanilla size
	
	type event_window_superevent_modern = event_window {
		name = "event_window_superevent_modern"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
		
		blockoverride "event_title_text_options" {
			flowcontainer = {
				minimumsize = { -1 606 }
				direction = vertical
				spacing = 20
				parentanchor = right|vcenter
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}

				textbox = {
					name = "description"
					multiline = yes
					autoresize = yes
					minimumsize = { 480 -1 }
					maximumsize = { 480 -1 }
					parentanchor = top|hcenter
					align = hcenter|nobaseline
					raw_text = "#bold [EventWindow.GetDescription]#!"
					margin = { 10 0 }
					using = fontsize_large
				}

				divider_decorative = {}

				textbox = {
					name = "flavortext"
					multiline = yes
					autoresize = yes
					minimumsize = { 480 -1 }
					maximumsize = { 480 -1 }
					parentanchor = top|hcenter
					align = top|left
					raw_text = "#lore [EventWindow.GetFlavor]#!"
					margin = { 30 10 }
				}

				widget = { size = { 20 10 }}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					datamodel = "[EventWindow.GetOptions]"
					spacing = 5

					item = {
						container = {
							
							widget = {
								visible = "[EventOption.IsHighlightedOption]"
								
								button = {
									size = { 96% 100% }
									parentanchor = hcenter
									using = default_button_primary_action
									onclick = "[EventOption.Select]"
									tooltip = "[EventOption.GetDesc]"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 500 42 }
									maximumsize = { 500 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}
							}

							widget = {
								visible = "[Not(EventOption.IsHighlightedOption)]"
								
								button = {
									size = { 96% 100% }
									parentanchor = hcenter
									using = default_button_action
									onclick = "[EventOption.Select]"
									tooltip = "EVENT_OPTION_TOOLTIP"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 500 42 }
									maximumsize = { 500 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}

								### Time until the default option will be picked
								round_progress_default = {
									visible = "[EventOption.IsDefaultOption]"
									parentanchor = right|vcenter
									position = { 0 0.5 }
									size = { 27 27 }
									tooltip = "DEFAULT_EVENT_OPTION"
									value = "[Event.GetPercentageRemainingDays]"

									icon = {
										size = { 26 26 }
										position = { -0.2 -0.2 }
										parentanchor = center
										texture = "gfx/interface/icons/generic_icons/event_default_option.dds"
									}
								}
							}
						}
					}
				}

				button = {
					parentanchor = hcenter
					visible = "[InDebugMode]"
					size = { 480 62 }
					using = default_button
					raw_text = "DEBUG: Open Event in text editor"
					onclick = "[EventWindow.AccessEvent.OpenInEditor]"
				}

				textbox = {
					background = {
						using = default_background
					}
					parentanchor = hcenter
					size = { 480 62 }
					visible = "[InDebugMode]"
					raw_text = "DEBUG: Trigger description"
					tooltip = "[Event.GetTriggerDesc]"
					align = hcenter|nobaseline
				}

				textbox = {
					visible = [InDebugMode]
					parentanchor = hcenter
					align = hcenter
					raw_text = "Event ID: [Event.GetKey|v]"
				}
			}
		}
		
	}
	
	### SUPEREVENT MODERN WINDOW (FULL WINDOW BACKGROUND)
	# This window stretches the background video/texture to fill the entire window
	
	type event_window_superevent_modern_full = event_window {
		name = "event_window_superevent_modern_full"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame_fullscreen_horizontal.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}	
		
		blockoverride "event_title_text_options" {
			flowcontainer = {
				minimumsize = { -1 606 }
				direction = vertical
				spacing = 20
				parentanchor = right|vcenter
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}

				textbox = {
					name = "description"
					multiline = yes
					autoresize = yes
					minimumsize = { 480 -1 }
					maximumsize = { 480 -1 }
					parentanchor = top|hcenter
					align = hcenter|nobaseline
					raw_text = "#bold [EventWindow.GetDescription]#!"
					margin = { 10 0 }
					using = fontsize_large
				}

				divider_decorative = {}

				textbox = {
					name = "flavortext"
					multiline = yes
					autoresize = yes
					minimumsize = { 480 -1 }
					maximumsize = { 480 -1 }
					parentanchor = top|hcenter
					align = top|left
					raw_text = "#lore [EventWindow.GetFlavor]#!"
					margin = { 30 10 }
				}

				widget = { size = { 20 10 }}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					datamodel = "[EventWindow.GetOptions]"
					spacing = 5

					item = {
						container = {
							
							widget = {
								visible = "[EventOption.IsHighlightedOption]"
								
								button = {
									size = { 96% 100% }
									parentanchor = hcenter
									using = default_button_primary_action
									onclick = "[EventOption.Select]"
									tooltip = "[EventOption.GetDesc]"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 500 42 }
									maximumsize = { 500 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}
							}

							widget = {
								visible = "[Not(EventOption.IsHighlightedOption)]"
								
								button = {
									size = { 96% 100% }
									parentanchor = hcenter
									using = default_button_action
									onclick = "[EventOption.Select]"
									tooltip = "EVENT_OPTION_TOOLTIP"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 500 42 }
									maximumsize = { 500 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 30 10 }
								}

								### Time until the default option will be picked
								round_progress_default = {
									visible = "[EventOption.IsDefaultOption]"
									parentanchor = right|vcenter
									position = { 0 0.5 }
									size = { 27 27 }
									tooltip = "DEFAULT_EVENT_OPTION"
									value = "[Event.GetPercentageRemainingDays]"

									icon = {
										size = { 26 26 }
										position = { -0.2 -0.2 }
										parentanchor = center
										texture = "gfx/interface/icons/generic_icons/event_default_option.dds"
									}
								}
							}
						}
					}
				}

				button = {
					parentanchor = hcenter
					visible = "[InDebugMode]"
					size = { 480 62 }
					using = default_button
					raw_text = "DEBUG: Open Event in text editor"
					onclick = "[EventWindow.AccessEvent.OpenInEditor]"
				}

				textbox = {
					background = {
						using = default_background
					}
					parentanchor = hcenter
					size = { 480 62 }
					visible = "[InDebugMode]"
					raw_text = "DEBUG: Trigger description"
					tooltip = "[Event.GetTriggerDesc]"
					align = hcenter|nobaseline
				}

				textbox = {
					visible = [InDebugMode]
					parentanchor = hcenter
					align = hcenter
					raw_text = "Event ID: [Event.GetKey|v]"
				}
			}
		}
		
	}

	### SUPEREVENT CRISIS WINDOW
	# event_window_crisis uses six character scopes saved as variables
	# You need to save each character scope into the variable "crisis_scope_x" ("x" can be 1 thru 6)
	# The characters are pulled from the variables and placed in this layout:
	# 1   4
	#  2 5
	# 3   6

	type event_window_superevent_crisis = event_window {
		name = "event_window_superevent_crisis"
		
		blockoverride "event_image_size" {
			size = { 1280 800 }
			parentanchor = center
		}
		
		blockoverride "event_inner_shading" {
			icon = {
				texture = "gfx/interface/event_window/event_inner_frame_fullscreen_horizontal.dds"
				size = { 100% 100% }
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				spriteborder_right = 0
				spriteborder_top = 0
				texture_density = 2
			
				modify_texture = {
					texture = "gfx/interface/backgrounds/default_bg_shading.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
				modify_texture = {
					using = texture_velvet
				}
			}
		}
		
		widget = {
			size = { 1280 800 }
			parentanchor = center
		
			#6char texture
			icon = {
				texture = "gfx/event_pictures/6characters.dds"
				alwaystransparent = yes
				size = { 1280 800 }
				parentanchor = center
				alpha = 0.9
			}
			
			# 1st Character
			container = {
				position = { -466 -201 }
				parentanchor = center
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_1').GetCharacter]"

				character_portrait_duel_01 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
			
			#2nd Character
			container = {
				position = { -246 4 }
				parentanchor = center
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_2').GetCharacter]"

				character_portrait_duel_01 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
			
			#3rd Character
			container = {
				position = { -494 206 }
				parentanchor = center
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_3').GetCharacter]"

				character_portrait_duel_01 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
			
			# 4th Character
			container = {
				position = { 457 -201 }
				parentanchor = center 
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_4').GetCharacter]"

				character_portrait_duel_02 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
			
			
			# 5th Character
			container = {
				position = { 240 4 }
				parentanchor = center
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_5').GetCharacter]"

				character_portrait_duel_02 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
			
			#6th Character
			container = {
				position = { 488 207 }
				parentanchor = center
				
				datacontext = "[GetPlayer.MakeScope.Var('crisis_character_6').GetCharacter]"

				character_portrait_duel_02 = {
					blockoverride "show_hat" {}
					blockoverride "portrait_mask" {
						mask = "gfx/event_pictures/2characters_mask.dds"
					}
					blockoverride "portrait_icons" {}
				}
			}
		}
		
		blockoverride "event_title_text_options" {
			flowcontainer = {
				minimumsize = { -1 200 }
				direction = vertical
				spacing = 20
				parentanchor = hcenter|top
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}
				
				textbox = { # toptext, uses the event description loc
					name = "description"
					multiline = yes
					autoresize = yes
					minimumsize = { 480 128 }
					maximumsize = { 480 128 }
					parentanchor = top|hcenter
					align = hcenter|nobaseline
					raw_text = "#bold [EventWindow.GetDescription]#!"
					margin = { 10 0 }
					using = fontsize_large
				}			
			}
		
			flowcontainer = {
				minimumsize = { -1 200 }
				direction = vertical
				spacing = 20
				parentanchor = hcenter|bottom
				margin = { 25 40 }

				background = {
					texture = "gfx/interface/backgrounds/tutorial_bg.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					alpha = 0.94
					
					modify_texture = {
						texture = "gfx/interface/backgrounds/gradient_overlay.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = overlay
						alpha = 0.7
					}
					margin = { -15 -20 }
				}

				textbox = { # bottomtext, uses the event flavor loc
					name = "flavortext"
					multiline = yes
					autoresize = yes
					minimumsize = { 512 48 }
					maximumsize = { 512 72 }
					parentanchor = top|hcenter
					align = hcenter|nobaseline
					raw_text = "#lore [EventWindow.GetFlavor]#!"
					margin = { 0 10 }
				}

				flowcontainer = {
					direction = vertical
					using = default_list_position
					datamodel = "[EventWindow.GetOptions]"
					spacing = 5
					margin = { 10 10 }

					item = {
						container = {
							widget = {
								visible = "yes"
								
								button = {
									size = { 100% 100% }
									parentanchor = hcenter|bottom
									using = default_button_action
									onclick = "[EventOption.Select]"
									tooltip = "EVENT_OPTION_TOOLTIP"
									using = tooltip_ws
									enabled = "[EventOption.IsEnabled]"
									using = confirm_button_sound
									texture = "gfx/interface/backgrounds/tutorial_bg.dds"
								}

								textbox = {
									resizeparent = yes
									minimumsize = { 400 42 }
									maximumsize = { 400 -1 }
									text = "[EventOption.GetText]"
									multiline = yes
									align = hcenter|nobaseline
									autoresize = yes
									margin = { 10 10 }
								}
							}
						}
					}
				}
			}
		}
	}
}